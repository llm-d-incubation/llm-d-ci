apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: scheduler-routing-pipeline
  labels:
    build.appstudio.redhat.com/pipeline: "scheduler-routing"
spec:
  params:
    - name: llm-d-inference-scheduler-d79d9-image
      type: string
    - name: llm-d-routing-sidecar-b03d5
      type: string

  results:
    - name: test-output
      value: "$(tasks.test.results.test-output)"

  tasks:
    - name: deploy
      params:
        - name: scheduler-image
          value: $(params.scheduler-image)
        - name: sidecar-image
          value: $(params.sidecar-image)
      taskSpec:
        params:
          - name: scheduler-image
          - name: sidecar-image
        steps:
          - name: deploy
            image: quay.io/openshift/origin-cli:latest
            script: |
              oc apply -f - <<EOF
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: scheduler
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: scheduler
                template:
                  metadata:
                    labels:
                      app: scheduler
                  spec:
                    containers:
                    - name: scheduler
                      image: $(params.scheduler-image)
                      ports:
                        - containerPort: 8080
              ---
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: routing-sidecar
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: routing-sidecar
                template:
                  metadata:
                    labels:
                      app: routing-sidecar
                  spec:
                    containers:
                    - name: routing-sidecar
                      image: $(params.sidecar-image)
                      env:
                        - name: SCHEDULER_HOST
                          value: "http://scheduler:8080"
                      ports:
                        - containerPort: 8090
              EOF

    - name: test
      runAfter: [deploy]
      taskSpec:
        results:
          - name: test-output
        steps:
          - name: test
            image: registry.access.redhat.com/ubi8/python-39
            script: |
              sleep 10
              output=$(curl -s -X POST http://routing-sidecar:8090/inference -H "Content-Type: application/json" -d '{"input": "ping"}')
              echo "$output" | tee /tekton/results/test-output
              echo "$output" | grep -q '"status": "ok"' || exit 1
